@model IPagedList<ClubMembership.Models.MemberShipMaster>
@using PagedList.Mvc;
@using PagedList;

<div class="container-fluid px-4 py-4">
    <div class="card shadow border-0">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="mb-0">
                    <i class="bi bi-people-fill me-2"></i> Members Management
                </h3>
                <a href="@Url.Action("Create", "Members")" class="btn btn-light btn-sm">
                    <i class="bi bi-plus-circle me-1"></i> Add New Member
                </a>
            </div>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-12">
                    <form method="get" action="@Url.Action("Index", "Members")" class="row g-2 align-items-center" role="search">
                        <div class="col-sm-6 col-md-7 col-lg-8">
                            <input type="text" name="q" value="@ViewBag.CurrentFilter" class="form-control" id="searchInput"
                                   placeholder="Search by Member ID, Name, Gender, Mobile, Plan, Area, Remaining (e.g. 'expired', '30 days')" />
                        </div>
                        <div class="col-sm-3 col-md-3 col-lg-2">
                            <select name="pageSize" class="form-select" id="pageSizeSelect">
                                @{ var sizes = new[]{10,20,50,100}; var selected = (int)(ViewBag.PageSize ?? 10); }
                                @foreach (var s in sizes)
                                {
                                    <option value="@s" @(s==selected?"selected":"")>@s per page</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-3 col-md-2 col-lg-2 d-flex">
                            @if (!string.IsNullOrWhiteSpace(ViewBag.CurrentFilter as string))
                            {
                                <a href="@Url.Action("Index", new { page = 1, pageSize = ViewBag.PageSize })" class="btn btn-outline-secondary">
                                    <i class="bi bi-x-circle"></i> Clear
                                </a>
                            }
                        </div>
                    </form>
                </div>
            </div>
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }
            <div class="table-responsive">
                <table class="table table-hover table-striped">
                    <thead class="table-light">
                        <tr>
                            <th>Member ID</th>
                            <th>Member Name</th>
                            <th>Gender</th>
                            <th>Mobile Number</th>
                            <th>Plan</th>
                            <th>Area</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Remaining</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            var today = DateTime.Now.Date;
                            var endDate = item.Member_Edate.Date;
                            var daysRemaining = (endDate - today).Days;
                            var isExpiringSoon = daysRemaining <= 30;
                            var remainingText = daysRemaining < 0 ? "Expired" : daysRemaining + " days";
                            var textColor = daysRemaining <= 30 ? "text-danger fw-bold" : "";
                            
                            <tr>
                                <td>@item.MemberDNo</td>
                                <td>@item.Member_Name</td>
                                <td>@(item.Gender == 1 ? "Male" : item.Gender == 2 ? "Female" : "Other")</td>
                                <td>@item.Member_Mobile_No</td>
                                <td>@(item.MemberShipTypeMaster != null ? item.MemberShipTypeMaster.MemberTypeDescription : "N/A")</td>
                                <td>@item.Member_Area</td>
                                <td>@item.Member_Sdate.ToString("dd/MM/yyyy")</td>
                                <td>@item.Member_Edate.ToString("dd/MM/yyyy")</td>
                                <td class="@textColor">@remainingText</td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Edit", new { id = item.MemberID })" class="btn btn-sm btn-outline-secondary">
                                            <i class="bi bi-pencil-square"></i> Edit
                                        </a>
                                        <form method="post" action="@Url.Action("Delete", "Members", new { id = item.MemberID })" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                    onclick="return confirm('Are you sure you want to delete @item.Member_Name? This will permanently delete:\n\n• Member profile information\n• Family details\n• Payment records\n• Organization details\n• User account\n\nThis action cannot be undone.');">
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </form>
                                        <!-- Print action can be implemented as needed -->
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Simplified Pagination -->
            <div class="row">
                <div class="col-md-12">
                    <div class="float-end">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, q = ViewBag.CurrentFilter, pageSize = ViewBag.PageSize }),
                        new PagedListRenderOptions
                             {
                            Display = PagedListDisplayMode.IfNeeded,
                            MaximumPageNumbersToDisplay = 5
                        })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            var alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                alert.style.display = 'none';
            });
        }, 5000);

        // Auto-search functionality
        var searchTimeout;
        var searchInput = document.getElementById('searchInput');
        var pageSizeSelect = document.getElementById('pageSizeSelect');
        
        function performSearch() {
            var searchValue = searchInput.value;
            var pageSize = pageSizeSelect.value;
            
            // Build the URL with search parameters
            var url = '@Url.Action("Index", "Members")';
            var params = [];
            
            if (searchValue && searchValue.trim() !== '') {
                params.push('q=' + encodeURIComponent(searchValue));
            }
            if (pageSize) {
                params.push('pageSize=' + pageSize);
            }
            params.push('page=1'); // Reset to first page on new search
            
            if (params.length > 0) {
                url += '?' + params.join('&');
            }
            
            // Navigate to the new URL
            window.location.href = url;
        }
        
        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(performSearch, 500); // Wait 500ms after user stops typing
        });

        // Page size change handler
        pageSizeSelect.addEventListener('change', function() {
            performSearch();
        });

        // Clear search functionality
        searchInput.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                searchInput.value = '';
                window.location.href = '@Url.Action("Index", "Members")';
            }
        });
    });
</script>